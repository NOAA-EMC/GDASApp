obs space:
  name: insitu_profile_argo
  obsdatain:
    engine:
      type: H5File
      obsfile: ${DATA}/obs/${OPREFIX}insitu_profile_argo.${PDY}${cyc}.nc4
    obsgrouping:
      group variables: [latitude, longitude, dateTime]
      sort variable: depth
      sort group: MetaData
      sort order: ascending
  obsdataout:
    engine:
      type: H5File
      obsfile: ${DATA}/diags/insitu_profile_argo.${PDY}${cyc}.nc4
  simulated variables: [waterTemperature, salinity]
  observed variables: [waterTemperature, salinity]
#  derived variables: [waterPressure]
  io pool:
    max pool size: 1
obs operator:
  name: Composite
  components:
  - name: InsituTemperature
    variables:
    - name: waterTemperature
  - name: VertInterp
    # note: alias file is needed for now because of a conflict with "waterTemperature".
    # The built-in alias maps to "ocean_temperature", but soca uses "sea_water_temperature"
    observation alias file: obsop_name_map.yaml
    variables:
    - name: salinity
    vertical coordinate: sea_water_depth
    observation vertical coordinate: depth
    interpolation method: linear
obs error:
  covariance model: diagonal

#-------------------------------------------------------------------------------
#                   START OF OBS FILTERS (work done by Kriti Bhargava)
# The QC filters used here are based on the document by IODE that can be found at
# https://cdn.ioos.noaa.gov/media/2017/12/recommendations_in_situ_data_real_time_qc.pdf
#-------------------------------------------------------------------------------
obs filters:

  # land check
  - filter: Domain Check
    where:
    - variable: {name: GeoVaLs/sea_area_fraction}
      minvalue: 0.5

#-------------------------------------------------------------------------------
## Filters for T:
#-------------------------------------------------------------------------------
  #-------------------------------------------------------------------------------
  ### Global range test
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: -2.5
    maxvalue: 40.0

  #-----------------------------------------------------------------------------
  ### Regional range tests
  #-----------------------------------------------------------------------------

  #### Red Sea
  #-----------------------------------------------------------------------------
  ####
  #### the document linked here describes Red sea as the are between 10N, 40E;
  #### 20N, 50E; 30N, 30E; 10N, 40E. But that would also include Gulf of Aden.
  #### A more reasonable choice seemed to be a box that extends from 10 N to
  #### 30 N and 30 E to 45 East .

  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: 21.7
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 10
      maxvalue: 30
    - variable:
        name: MetaData/longitude
      minvalue: 30
      maxvalue: 45

  #### Mediterranean Sea
  #-----------------------------------------------------------------------------
  ##### Area 1/3 for Mediterranean Sea
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: 10.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 30
      maxvalue: 40
    - variable:
        name: MetaData/longitude
      minvalue: -6
      maxvalue: 40
  ##### Area 2/3 for Mediterranean Sea
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: 10.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 40
      maxvalue: 41.5
    - variable:
        name: MetaData/longitude
      minvalue: 20
      maxvalue: 30
  ##### Area 3/3 for Mediterranean Sea
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: 10.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 40
      maxvalue: 46
    - variable:
        name: MetaData/longitude
      minvalue: 0
      maxvalue: 20

  #### Northwestern shelves
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: -2.0
    maxvalue: 24.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 50
      maxvalue: 60
    - variable:
        name: MetaData/longitude
      minvalue: -20
      maxvalue: 10
  #### Southwestern shelves
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: -2.0
    maxvalue: 30
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 25
      maxvalue: 50
    - variable:
        name: MetaData/longitude
      minvalue: -30
      maxvalue: 0

  #### Arctic Sea
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: waterTemperature}]
    minvalue: -1.92
    maxvalue: 25.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 60

  - filter: Background Check
    filter variables: [{name: waterTemperature}]
    threshold: 5.0
    absolute threshold: 5.0

  #-------------------------------------------------------------------------------
  ### Spike test
  #-----------------------------------------------------------------------------
#  - filter: Create Diagnostic Flags
#    filter variables:
#      - name: waterTemperature
#      - name: salinity
#    flags:
#    - name: spike
#      initial value: false
#    - name: step
#      initial value: false
#
#  - filter: Spike and Step Check
#    filter variables:
#      - name: ObsValue/waterTemperature
#    dependent: ObsValue/waterTemperature  # dy/
#    independent: MetaData/depth     # dx
#    count spikes: true
#    count steps: true
#    tolerance:
#      nominal value: 10  # K nominal, in the case of temperature (not really)
#      gradient: 0.1 # K/m - if dy/dx greater, could be a spike
#      gradient x resolution: 10 # m - can't know dx to better precision
#      factors: [1,1,0.5]     # multiply tolerance, for ranges bounded by...
#      x boundaries: [0,500,500] # ...these values of x (depth in m)
#    boundary layer:
#      x range: [0.0,300.0] # when bounded by these x values (depth in m)...
#      step tolerance range: [0.0,-2.0]   # ...relax tolerance for steps in boundary layer...
#      maximum x interval: [50.0,100.0]  # ...and ignore level if dx greater than this
#    action:
#      name: reject
#
#  #### Count spikes
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment  # create derived obs value containing only T spikes
#    assignments:
#    - name: DerivedMetaData/waterTemperature_spikes
#      type: int
#      function:
#        name: IntObsFunction/ProfileLevelCount
#        options:
#          where:
#            - variable:
#                name: DiagnosticFlags/spike/waterTemperature
#              value: is_true
#
#  #### Count steps
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment  # create derived obs value containing only T steps
#    assignments:
#    - name: DerivedMetaData/waterTemperature_steps
#      type: int
#      function:
#        name: IntObsFunction/ProfileLevelCount
#        options:
#          where:
#            - variable:
#                name: DiagnosticFlags/step/waterTemperature
#              value: is_true
#  #### Count  total rejections
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment  # compute sum 2*spikes+steps
#    assignments:
#    - name: DerivedMetaData/waterTemperature_rejections
#      type: int
#      function:
#        name: IntObsFunction/LinearCombination
#        options:
#          variables: [DerivedMetaData/waterTemperature_spikes, DerivedMetaData/waterTemperature_steps]
#          coefs: [2,1]
#  #### Reject entire profile if total rejctions > threshold
#  #-----------------------------------------------------------------------------
#  - filter: Perform Action  # reject whole profile if 2*spikes+steps>=rejection threshold
#    where:
#    - variable:
#        name: DerivedMetaData/waterTemperature_rejections
#      minvalue: 3
#    action:
#      name: reject

#-------------------------------------------------------------------------------
## Filters for S:
#-------------------------------------------------------------------------------
  #-----------------------------------------------------------------------------
  ### Global range test
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 2.0
    maxvalue: 41.0

  #-----------------------------------------------------------------------------
  ### Regional range test
  #-----------------------------------------------------------------------------
  #### Red Sea
  #-----------------------------------------------------------------------------
  ####
  #### the document linked here describes Red sea as the are between 10N, 40E;
  #### 20N, 50E; 30N, 30E; 10N, 40E. But that would also include Gulf of Aden.
  #### A more reasonable choice seemed to be a box that extends from 10 N to
  #### 30 N and 30 E to 45 East .

  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 2.0
    maxvalue: 41.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 10
      maxvalue: 30
    - variable:
        name: MetaData/longitude
      minvalue: 30
      maxvalue: 45

  #### Mediterranean Sea
  #-----------------------------------------------------------------------------
  ##### Area 1/3 for Mediterranean Sea
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 2.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 30
      maxvalue: 40
    - variable:
        name: MetaData/longitude
      minvalue: -6
      maxvalue: 40
  ##### Area 2/3 for Mediterranean Sea
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 2.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 40
      maxvalue: 41.5
    - variable:
        name: MetaData/longitude
      minvalue: 20
      maxvalue: 30
  ##### Area 3/3 for Mediterranean Sea
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 2.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 40
      maxvalue: 46
    - variable:
        name: MetaData/longitude
      minvalue: 0
      maxvalue: 20


  #### Northwestern shelves
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 0.0
    maxvalue: 37.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 50
      maxvalue: 60
    - variable:
        name: MetaData/longitude
      minvalue: -20
      maxvalue: 10

  #### Southwestern shelves
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 0.0
    maxvalue: 38
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 25
      maxvalue: 50
    - variable:
        name: MetaData/longitude
      minvalue: -30
      maxvalue: 0

  #### Arctic Sea
  #-----------------------------------------------------------------------------
  - filter: Bounds Check
    filter variables: [{name: salinity}]
    minvalue: 2.0
    maxvalue: 40.0
    where:
    - variable:
        name: MetaData/latitude
      minvalue: 60

  - filter: Background Check
    filter variables: [{name: salinity}]
    threshold: 5.0
    absolute threshold: 5.0

  #-------------------------------------------------------------------------------
  ### Spike test
  #-----------------------------------------------------------------------------
#  - filter: Spike and Step Check
#    filter variables:
#      - name: ObsValue/salinity
#    dependent: ObsValue/salinity  # dy/
#    independent: MetaData/depth   # dx
#    count spikes: true
#    count steps: true
#    tolerance:
#      nominal value: 1.0  # PSU nominal, in the case of salinity (not really)
#      threshold: 0.6  # weird salinity thing
#      factors: [1,1,0.2]     # multiply tolerance, for ranges bounded by...
#      x boundaries: [0,200,600] # ...these values of x (depth in m)
#    boundary layer:
#      x range: [0.0,300.0] # when bounded by these x values (depth in m)...
#      maximum x interval: [50.0,100.0]  # ...and ignore level if dx greater than this
#    action:
#      name: reject
#
#  #### Count spikes
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment  # create derived obs value containing only S spikes
#    assignments:
#    - name: DerivedMetaData/salinity_spikes
#      type: int
#      function:
#        name: IntObsFunction/ProfileLevelCount
#        options:
#          where:
#            - variable:
#                name: DiagnosticFlags/spike/salinity
#              value: is_true
#  #### Count steps
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment  # create derived obs value containing only S steps
#    assignments:
#    - name: DerivedMetaData/salinity_steps
#      type: int
#      function:
#        name: IntObsFunction/ProfileLevelCount
#        options:
#          where:
#            - variable:
#                name: DiagnosticFlags/step/salinity
#              value: is_true
#  #### Count  total rejections
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment  # compute sum 2*spikes+steps
#    assignments:
#    - name: DerivedMetaData/salinity_rejections
#      type: int
#      function:
#        name: IntObsFunction/LinearCombination
#        options:
#          variables: [DerivedMetaData/salinity_spikes, DerivedMetaData/salinity_steps]
#          coefs: [2,1]
#  #### Reject entire profile if total rejctions > threshold
#  #-----------------------------------------------------------------------------
#  - filter: Perform Action  # reject whole profile if 2*spikes+steps>=rejection threshold
#    where:
#    - variable:
#        name: DerivedMetaData/salinity_rejections
#      minvalue: 3
#    action:
#      name: reject
  #-------------------------------------------------------------------------------
  ### End of Spike test
  #-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
## Filters on the whole profile:
#-----------------------------------------------------------------------------
  #-------------------------------------------------------------------------------
  ### Ocean Vertical stability test
  #-----------------------------------------------------------------------------

  #### get pressure from depth
  #-----------------------------------------------------------------------------
#  - filter: Variable Transforms
#    Transform: OceanDepthToPressure
#    ocean depth variable: depth
#    ocean depth group: MetaData
#  #### Create diagonostic flags for spike step
#  #-----------------------------------------------------------------------------
#  - filter: Create Diagnostic Flags
#    filter variables:
#      - name: DerivedObsValue/waterPressure
#    flags:
#    - name: DensitySpike
#      initial value: false
#    - name: DensityStep
#      initial value: false
#    - name: Superadiabat
#      initial value: false
#  ####
#  #-----------------------------------------------------------------------------
#  - filter: Ocean Vertical Stability Check
#    where:
#    - variable:
#        name: ObsValue/waterTemperature
#      value: is_valid
#    filter variables:
#      - name: DerivedObsValue/waterPressure  # density spikes/steps --> flag d
#    variables:
#      temperature: ObsValue/waterTemperature
#      salinity: ObsValue/salinity
#      pressure: DerivedObsValue/waterPressure
#    count spikes: true
#    count steps: true
#    nominal tolerance: -0.05
#    threshold: 0.25
#    actions:
#    - name: set
#      flag: Superadiabat
#    - name: reject
#  #### where there are any density inversions, reject temperature only:
#  #-----------------------------------------------------------------------------
#  - filter: Perform Action
#    filter variables:
#      - name: ObsValue/waterTemperature
#    where:
#    - variable:
#        name: DiagnosticFlags/Superadiabat/waterPressure
#      value: is_true
#    action:
#      name: reject
#  #### where density spikes, reject all vars (temperature and salinity):
#  #-----------------------------------------------------------------------------
#  - filter: Perform Action
#    filter variables:
#      - name: ObsValue/waterTemperature
#      - name: ObsValue/salinity
#    where:
#    - variable:
#        name: DiagnosticFlags/DensitySpike/waterPressure
#      value: is_true
#    action:
#      name: reject
#  #### create derived metadata counting levels:
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment
#    assignments:
#    - name: DerivedMetaData/number_of_levels
#      type: int
#      function:
#        name: IntObsFunction/ProfileLevelCount
#        options:
#          where:
#            - variable:
#                name: ObsValue/waterTemperature
#              value: is_valid
#  #### create derived metadata counting spikes and steps:
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment
#    assignments:
#    - name: DerivedMetaData/ocean_density_inversions
#      type: int
#      function:
#        name: IntObsFunction/ProfileLevelCount
#        options:
#          where:
#            - variable:
#                name: DiagnosticFlags/DensitySpike/waterPressure
#              value: is_true
#            - variable:
#                name: DiagnosticFlags/DensityStep/waterPressure
#              value: is_true
#          where operator: or
#
#  #### whole profile is rejected if spikes+steps >= numlev/4, so compute
#  ####  4*( sum spikes+steps ) minus numlev
#  ####  in order to check it against 0:
#  #-----------------------------------------------------------------------------
#  - filter: Variable Assignment
#    assignments:
#    - name: DerivedMetaData/ocean_density_rejections
#      type: int
#      function:
#        name: IntObsFunction/LinearCombination
#        options:
#          variables: [DerivedMetaData/ocean_density_inversions, DerivedMetaData/number_of_levels]
#          coefs: [4, -1]
#  #### reject whole profile if spikes+steps >= numlev/4 AND >= 2:
#  #-----------------------------------------------------------------------------
#  - filter: Perform Action
#    filter variables:
#      - name: ObsValue/waterTemperature
#      - name: ObsValue/salinity
#    where:
#    - variable:
#        name: DerivedMetaData/ocean_density_rejections
#      minvalue: 0
#    - variable:
#        name: DerivedMetaData/ocean_density_inversions
#      minvalue: 2
#    where operator: and
#    action:
#      name: reject
  #-------------------------------------------------------------------------------
  ### End of ocean vertical stability test
  #-----------------------------------------------------------------------------

  #-----------------------------------------------------------------------------
  ### If T was bad, remove S as well regardless
  #-----------------------------------------------------------------------------
  - filter: RejectList
    where:
    - variable: QCflagsData/waterTemperature
      minvalue: 1
    defer to post: true
    
  #--------------------------------------------------------------------------
  ### Set in situ obs multiplier coef for T,S
  #--------------------------------------------------------------------------
  - filter: Perform Action
    action:
      name: assign error
      error function:
        name: ObsFunction/LinearCombination
        options:
          variables:
          - ObsError/waterTemperature
          coefs:
          - 1000.0
  - filter: Perform Action
    action:
      name: assign error
      error function:
        name: ObsFunction/LinearCombination
        options:
          variables:
          - ObsError/salinity
          coefs:
          - 1000.0
obs localizations:
- localization method: Rossby
  base value: 100.0e3
  rossby mult: 1.0
  min grid mult: 2.0
  min value: 200.0e3
  max value: 900.0e3
