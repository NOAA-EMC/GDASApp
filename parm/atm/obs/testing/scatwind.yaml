obs space:
  name: scatwind
  obsdatain:
    engine:
      type: H5File
      obsfile: !ENV scatwind_obs_${CDATE}.nc4
  obsdataout:
    engine:
      type: H5File
      obsfile: !ENV scatwind_diag_${CDATE}.nc4 
  simulated variables: [windEastward, windNorthward]
geovals:
  filename: !ENV scatwind_geoval_${CDATE}.nc4
obs operator:
  name: VertInterp
  # Use height vertical coordinate first
# vertical coordinate: geometric_height
  vertical coordinate: geopotential_height
  observation vertical coordinate group: DerivedVariables
  observation vertical coordinate: adjustedHeight
  interpolation method: linear
  hofx scaling field: SurfaceWindScalingHeight
  hofx scaling field group: DerivedVariables

obs prior filters:
  # Apply variable changes needed for rescaled height coordinate
  - filter: Variable Transforms
    Transform: AdjustedHeightCoordinate
    SkipWhenNoObs: False

  # Apply variable changes needed for wind scaling
  - filter: Variable Transforms
    Transform: SurfaceWindScalingHeight
    SkipWhenNoObs: False

  # Assign the initial observation error (constant value, 1.5 m/s right now).
  - filter: Perform Action
    filter variables:
    - name: windEastward
    - name: windNorthward
    action:
      name: assign error
      error parameter: 1.5

  # Calculate error inflation factor for duplicate observations
#  - filter: Variable Assignment
#    assignments:
#    - name: ObsErrorFactorDuplicateCheck/windEastward
#      type: float
#      function:
#        name: ObsFunction/ObsErrorFactorDuplicateCheck
#        options:
#          use_air_pressure: true
#          variable: windEastward
#
#  - filter: Variable Assignment
#    assignments:
#    - name: ObsErrorFactorDuplicateCheck/windNorthward
#      type: float
#      function:
#        name: ObsFunction/ObsErrorFactorDuplicateCheck
#        options:
#          use_air_pressure: true
#          variable: windNorthward

  #
  # Reject all obs with PreQC mark already set above 3
  # NOTE: All scatwinds have an automatic PreQC mark of 2 (hard-wired default from GSI)
  # - filter: PreQC
  #   maxvalue: 3
  #   action:
  #     name: reject
  #
obs post filters:
  #
  # Reject all ASCAT (Type 290) winds with tsavg <= 273.0 (surface temperature)
  #
  - filter: Perform Action
    filter variables:
    - name: windEastward
    - name: windNorthward
    where:
    - variable: ObsType/windEastward
      is_in: 290
#   - variable: GeoVaLs/surface_temperature
    - variable: GeoVaLs/surface_temperature_where_land
      maxvalue: 273.
    action:
      name: reject
  #
  # Reject all ASCAT (Type 290) winds with isflg /= 0 (non-water surface)
  #
  - filter: Perform Action
    filter variables:
    - name: windEastward
    - name: windNorthward
    where:
    - variable: ObsType/windEastward
      is_in: 290
    - variable: GeoVaLs/water_area_fraction
      maxvalue: 0.99 
#    - variable: GeoVaLs/surface_type
#      minvalue: 0.001
    action:
      name: reject
#passedBenchmark: 53558 # 2 variables (u,v), u=26779 passing, v=26779 passing

  # Reject ASCAT (Type 290) when observed component deviates from background by more than 5.0 m/s
  # NOTE: This check can reject a u- or v-component of the same observation independently, which
  #       is fundamentally different from how GSI rejects obs (both components are rejected if
  #       either component fails a check).
  - filter: Bounds Check
    filter variables:
    - name: windEastward
    - name: windNorthward
    test variables:
    - name: ObsFunction/Arithmetic
      options:
        variables:
        - name: ObsValue/windEastward
        - name: HofX/windEastward
        coefs: [1.0, -1.0]
    minvalue: -5.0
    maxvalue: 5.0

  - filter: Bounds Check
    filter variables:
    - name: windEastward
    - name: windNorthward
    test variables:
    - name: ObsFunction/Arithmetic
      options:
        variables:
        - name: ObsValue/windNorthward
        - name: HofX/windNorthward
        coefs: [1.0, -1.0]
    minvalue: -5.0
    maxvalue: 5.0
#passedBenchmark: 52362 # 2 variables (u,v), u=26181 passing, v=26181 passing

  # Reject OSCAT (Type 291) when observed component deviates from background by more than 6.0 m/s
  # NOTE: This check can reject a u- or v-component of the same observation independently, which
  #       is fundamentally different from how GSI rejects obs (both components are rejected if
  #       either component fails a check).
  - filter: Background Check
    filter variables:
    - name: windEastward
    - name: windNorthward
    threshold: 6.
    absolute threshold: 6.
    where:
    - variable: ObsType/windEastward
      is_in: 291
    action:
      name: reject
  # Reject ASCAT (Type 290) when ambiguity check fails (returned value is negative)
  - filter: Bounds Check
    filter variables:
    - name: windEastward
    - name: windNorthward
    where:
    - variable: ObsType/windEastward
      is_in: 290
    test variables:
    - name: ObsFunction/ScatWindsAmbiguityCheck
      options:
#       test_hofx: GsiHofX
        minimum_uv: 0.0001 # hard-coding a minimum-uv for transparancy, want this to basically be zero
    maxvalue: 0.  
    action:
      name: reject
#passedBenchmark: 51776 # 2 variables (u,v), u=25888 passing, v=25888 passing

  # All scatwinds must adjust errors based on ObsErrorFactorPressureCheck.
  # This check will inflate errors for obs that are too close to either
  # the model top or bottom.
  - filter: Perform Action
    filter variables:
    - name: windEastward
    where:
      - variable:
          name: ObsType/windEastward
        is_in: 290-291
    action:
      name: inflate error
      inflation variable:
        name: ObsFunction/ObsErrorFactorPressureCheck
        options:
          variable: windEastward
          inflation factor: 4.0

  - filter: Perform Action
    filter variables:
    - name: windNorthward
    where:
      - variable:
          name: ObsType/windNorthward
        is_in: 290-291
    action:
      name: inflate error
      inflation variable:
        name: ObsFunction/ObsErrorFactorPressureCheck
        options:
          variable: windNorthward
          inflation factor: 4.0
#passedBenchmark: 51776 # 2 variables (u,v), u=25888 passing, v=25888 passing

  # All scatwinds subject to a gross error check. This is contained within
  # the WindsSPDBCheck, although it is not exclusive to satwinds.
  - filter: Background Check
    filter variables:
    - name: windEastward
    function absolute threshold:
    - name: ObsFunction/WindsSPDBCheck
      options:
        wndtype: [  290,  291]
        cgross:  [  5.0,  5.0]
        error_min: [1.4,  1.4]
        error_max: [6.1,  6.1]
        variable: windEastward
    action:
      name: reject

  - filter: Background Check
    filter variables:
    - name: windNorthward
    function absolute threshold:
    - name: ObsFunction/WindsSPDBCheck
      options:
        wndtype: [  290,  291]
        cgross:  [  5.0,  5.0]
        error_min: [1.4,  1.4]
        error_max: [6.1,  6.1]
        variable: windNorthward
    action:
      name: reject
#passedBenchmark: 51776 # 2 variables (u,v), u=25888 passing, v=25888 passing

  # The last error inflation check is for duplicate observations. This one needs
  # to come last, because we don't want to inflate errors for duplication if one
  # of the duplicates should be rejected.
#  - filter: Perform Action
#    filter variables:
#    - name: windEastward
#    action:
#      name: inflate error
#      inflation variable:
#        name: ObsErrorFactorDuplicateCheck/windEastward
#
#  - filter: Perform Action
#    filter variables:
#    - name: windNorthward
#    action:
#      name: inflate error
#      inflation variable:
#        name: ObsErrorFactorDuplicateCheck/windNorthward

  # There is no across-the-board inflation for nvqc=.true. for scatwinds, presumably because for
  # this inflation to take place both nvqc must be .true. AND ibeta must be >0, see:
  # https://github.com/NOAA-EMC/GSI/blob/14ae595af1b03471287d322596d35c0665336e95/src/gsi/setupw.f90#L1229
  # GSI settings must have ibeta>0 for satwinds, but not for scatwinds.
  #
  # 
  # If the ibeta settings for scatwinds were to change while nvqc remained .true., we would extend YAML to
  # an additional filter that inflates final ob-errors across-the-board by 1/0.8 = 1.25. NOTE: the nvqc setting
  # is defaulted to .false. in GSI code, but is overridden in global operational configuration. See:
  # configuration, see: https://github.com/NOAA-EMC/global-workflow/blob/d5ae3328fa4041b177357b1133f6b92e81c859d7/scripts/exglobal_atmos_analysis.sh#L750
  # This setting activates Line 1229 of setupw.f90 to scale ratio_errors by 0.8, which is applied in
  # the denominator of the final ob-error, so 1/0.8 = 1.25 factor of ob-error inflation.
  #
  # If this functionality were to be activated for scatwinds, you would want to include this last inflation filter.
#  - filter: Perform Action
#    filter variables:
#    - name: windEastward
#    where:
#    - variable: ObsType/windEastward
#      is_in: 290-291
#    action:
#      name: inflate error
#      inflation factor: 1.25
#  - filter: Perform Action
#    filter variables:
#    - name: windNorthward
#    where:
#    - variable: ObsType/windNorthward
#      is_in: 290-291
#    action:
#      name: inflate error
#      inflation factor: 1.25
#passedBenchmark: 51776 # 2 variables (u,v), u=25888 passing, v=25888 passing
passedBenchmark: 51764 # 2 variables (u,v), u=25882 passing, v=25882 passing
                       # GSI rejects both u- and v-component in first-guess check, UFO does not, but when UFO rej is reconciled btwn u and v these match GSI rej
                       #   u: 207 obs pass with corresponding v being rejected, 25880 obs in UFO/GSI agreement
                       #   v: 130 obs pass with corresponding u being rejected, 25880 obs in UFO/GSI agreement
                       # 2 u- and 2 v-component obs pass in UFO that fail in GSI, only due to differences in assumed land-surface type (GSI=0, UFO=3)
                       #
                       # NOTE: These benchmark numbersare for a 6-hour time-window using the JEDI time-window convention only. The JEDI time-window convention
                       #       differs from GSI and is less inclusive for observations at the beginning of the window. This can affect how the two systems
                       #       employ ob-error inflation from duplicate observations, as the GSI has more observations at the beginning of the time-window to
                       #       find duplicates. This can result in UFO ob-errors being smaller for some obs at the beginning of the UFO's JEDI-convention
                       #       time-window.
