obs space:
  name: amsua_n19
  obsdatain:
    engine:
      type: H5File
      obsfile: $(DATA)/obs/$(OPREFIX)amsua_n19.tm00.nc
  obsdataout:
    engine:
      type: H5File
      obsfile: $(DATA)/diags/diag_amsua_n19_{{ current_cycle | to_YMDH }}.nc
  io pool:
    max pool size: 1
  simulated variables: [brightnessTemperature]
  channels: &amsua_n19_channels 1-15

obs operator:
  name: CRTM
  Absorbers: [H2O,O3]
  Clouds: [Water, Ice]
  Cloud_Fraction: 1.0
  Cloud_Seeding: true
  obs options:
    Sensor_ID: &Sensor_ID amsua_n19
    EndianType: little_endian
    CoefficientPath: $(DATA)/crtm/

obs bias:
  input file: $(DATA)/obs/$(GPREFIX)amsua_n19.satbias.nc4
  output file: $(DATA)/bc/$(APREFIX)amsua_n19.satbias.nc4
  variational bc:
    predictors:
    - name: constant
    - name: lapse_rate
      order: 2
      tlapse: &amsua_n19_tlapse $(DATA)/obs/$(GPREFIX)amsua_n19.tlapse.txt
    - name: lapse_rate
      tlapse: *amsua_n19_tlapse
    - name: emissivity
    - name: scan_angle
      order: 4
    - name: scan_angle
      order: 3
    - name: scan_angle
      order: 2
    - name: scan_angle
  covariance:
    minimal required obs number: 20
    variance range: [1.0e-6, 10.0]
    step size: 1.0e-4
    largest analysis variance: 10000.0
    prior:
      input file: $(DATA)/obs/$(GPREFIX)amsua_n19.satbias_cov.nc4
      inflation:
        ratio: 1.1
        ratio for small dataset: 2.0
    output file: $(DATA)/bc/$(APREFIX)amsua_n19.satbias_cov.nc4

obs pre filters: 
# Step 0-A: Create Diagnostic Flags
- filter: Create Diagnostic Flags
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  flags:
  - name: ScanEdgeRemoval
    initial value: false
    force reinitialization: false
  - name: Thinning
    initial value: false
    force reinitialization: false
  - name: CLWRetrievalCheck
    initial value: false
    force reinitialization: false
  - name: WindowChannelExtremeResidual
    initial value: false
    force reinitialization: false
  - name: HydrometeorCheck
    initial value: false
    force reinitialization: false
  - name: GrossCheck
    initial value: false
    force reinitialization: false
  - name: InterChannelConsistency
    initial value: false
    force reinitialization: false
  - name: UseflagCheck
    initial value: false
    force reinitialization: false

obs post filters: 
# Step 0-B: Calculate Derived Variables
# Calculate CLW retrieved from observation 
- filter: Variable Assignment
  assignments: 
  - name: DerivedMetaData/CLWRetFromObs
    type: float
    function: 
      name: ObsFunction/CLWRetMW
      options:
        clwret_ch238: 1
        clwret_ch314: 2
        clwret_types: [ObsValue]

- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/surfaceParam
    type: int
    function:
      name: IntObsFunction/Conditional
      options:
        defaultvalue: 0
        firstmatchingcase: true
        cases:
        - where:
          - variable:
              name: GeoVaLs/water_area_fraction
            minvalue: 0.99
          value: 100
        - where:
          - variable:
              name: GeoVaLs/land_area_fraction
            minvalue: 0.99
          value: 85
        - where:
          - variable:
              name: GeoVaLs/ice_area_fraction
            minvalue: 0.99
          value: 90
        - where:
          - variable:
              name: GeoVaLs/surface_snow_area_fraction
            minvalue: 0.99
          value: 85

- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/thinningCriteria
    type: int
    function:
      name: IntObsFunction/Arithmetic
      options:
        variables:
        - name: DerivedMetaData/surfaceParam
        coefs: [1]

# Calculate CLW retrieved from background 
- filter: Variable Assignment 
  assignments:
  - name: DerivedMetaData/CLWRetFromBkg
    type: float
    function: 
      name: ObsFunction/CLWRetMW
      options:
        clwret_ch238: 1
        clwret_ch314: 2
        clwret_types: [HofX]

# Calculate symmetric retrieved CLW
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/CLWRetSymmetric
    type: float
    value: 1000.0

- filter: Variable Assignment
  where:
  - variable:
      name: DerivedMetaData/CLWRetFromObs
    minvalue:   0. 
    maxvalue: 999. 
  - variable:
      name: DerivedMetaData/CLWRetFromBkg
    minvalue:   0. 
    maxvalue: 999. 
  where operator: and
  assignments:
  - name: DerivedMetaData/CLWRetSymmetric
    type: float
    function:
      name: ObsFunction/Arithmetic
      options:
        variables:
        - name: DerivedMetaData/CLWRetFromObs
        - name: DerivedMetaData/CLWRetFromBkg
        total coefficient: 0.5

# Calculate scattering index from observation
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/SIRetFromObs
    type: float
    function:
      name: ObsFunction/SCATRetMW
      options:
        scatret_ch238: 1
        scatret_ch314: 2
        scatret_ch890: 15
        scatret_types: [ObsValue]

# Calculate CLW obs/bkg match index
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/CLWMatchIndex
    channels: *amsua_n19_channels
    type: float 
    function:
      name: ObsFunction/CLWMatchIndexMW
      channels: *amsua_n19_channels
      options:
        channels: *amsua_n19_channels
        clwobs_function:
          name: DerivedMetaData/CLWRetFromObs
        clwbkg_function:
          name: DerivedMetaData/CLWRetFromBkg
        clwret_clearsky: [0.050, 0.030, 0.030, 0.020, 0.000,
                          0.100, 0.000, 0.000, 0.000, 0.000,
                          0.000, 0.000, 0.000, 0.000, 0.030]

# Calculate symmetric observation error 
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/InitialObsError
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/ObsErrorModelRamp
      channels: *amsua_n19_channels
      options:
        channels: *amsua_n19_channels
        xvar:
          name: DerivedMetaData/CLWRetSymmetric
        x0:    [ 0.050,  0.030,  0.030,  0.020,  0.000,
                 0.100,  0.000,  0.000,  0.000,  0.000,
                 0.000,  0.000,  0.000,  0.000,  0.030]
        x1:    [ 0.600,  0.450,  0.400,  0.450,  1.000,
                 1.500,  0.000,  0.000,  0.000,  0.000,
                 0.000,  0.000,  0.000,  0.000,  0.200]
        err0:  [ 2.500,  2.200,  2.000,  0.550,  0.300,
                 0.230,  0.230,  0.250,  0.250,  0.350,
                 0.400,  0.550,  0.800,  4.000,  3.500]
        err1:  [20.000, 18.000, 12.000,  3.000,  0.500,
                 0.300,  0.230,  0.250,  0.250,  0.350,
                 0.400,  0.550,  0.800,  4.000, 18.000]

# Calculate Innovation
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/Innovation
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/Arithmetic
      channels: *amsua_n19_channels
      options:
        variables:
        - name: ObsValue/brightnessTemperature
          channels: *amsua_n19_channels
        - name: HofX/brightnessTemperature
          channels: *amsua_n19_channels
        coefs: [1, -1]

# Step 0-C: Assign Initial All-Sky Observation Error
- filter: Perform Action
  filter variables:
  - name: brightnessTemperature 
    channels: *amsua_n19_channels
  action: 
    name: assign error
    error function: 
      name: DerivedMetaData/InitialObsError
      channels: *amsua_n19_channels

# Step 1: Remove Observations from the Edge of the Scan
- filter: Domain Check
  filter variables:
  - name: brightnessTemperature
    channels: 1-15
  where:
  - variable:
      name: MetaData/sensorScanPosition
    is_in: 4-27
  actions:
    - name: set
      flag: ScanEdgeRemoval
    - name: reject

# Step 2: Data Thinning
- filter: Gaussian Thinning
  horizontal_mesh: 145
  use_reduced_horizontal_grid: true
  distance_norm: geodesic
  priority_variable: DerivedMetaData/thinningCriteria
#  round_horizontal_bin_count_to_nearest: true
#  partition_longitude_bins_using_mesh: true
  actions:
    - name: set
      flag: Thinning
    - name: reject

# Step 3A: CLW Retrieval Check (observation_based)
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: 1-6, 15
  test variables:
  - name: DerivedMetaData/CLWRetFromObs
  maxvalue: 999.0
  actions:
    - name: set
      flag: CLWRetrievalCheck
    - name: reject

# Step 3B: CLW Retrieval Check (background_based)
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: 1-6, 15
  test variables:
  - name: DerivedMetaData/CLWRetFromBkg
  maxvalue: 999.0
  actions:
    - name: set
      flag: CLWRetrievalCheck
    - name: reject

# Step 4: Window Channel Sanity Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: 1-6, 15
  test variables:
  - name: DerivedMetaData/Innovation
    channels: 1, 2, 4-6, 15
  maxvalue: 200.0
  minvalue: -200.0
  flag all filter variables if any test variable is out of bounds: true
  actions:
    - name: set
      flag: WindowChannelExtremeResidual
    - name: reject

# Step 5: Hydrometeor Check (cloud/precipitation affected chanels)
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  test variables:
  - name: ObsFunction/HydrometeorCheckAMSUA
    channels: *amsua_n19_channels
    options:
      channels: *amsua_n19_channels
      obserr_clearsky: [ 2.500, 2.200, 2.000, 0.550, 0.300,
                         0.230, 0.230, 0.250, 0.250, 0.350,
                         0.400, 0.550, 0.800, 4.000, 3.500]
      clwret_function:
        name: DerivedMetaData/CLWRetFromObs
      obserr_function:
        name: DerivedMetaData/InitialObsError
        channels: *amsua_n19_channels
  maxvalue: 0.0
  actions:
    - name: set
      flag: HydrometeorCheck
      ignore: rejected observations
    - name: reject

# Step 6: Observation Error Inflation based on Topography Check
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/ObsErrorFactorTopo
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/ObsErrorFactorTopoRad
      channels: *amsua_n19_channels
      options:
        sensor: *Sensor_ID
        channels: *amsua_n19_channels

- filter: Perform Action 
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  action:
    name: inflate error
    inflation variable:
      name: DerivedMetaData/ObsErrorFactorTopo
      channels: *amsua_n19_channels

# Step 7: Obs Error Inflation based on TOA Transmittancec Check
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/ObsErrorFactorTransmitTop
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/ObsErrorFactorTransmitTopRad
      channels: *amsua_n19_channels
      options:
        channels: *amsua_n19_channels

- filter: Perform Action 
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  action:
    name: inflate error
    inflation variable:
      name: DerivedMetaData/ObsErrorFactorTransmitTop
      channels: *amsua_n19_channels

# Step 8: Observation Error Inflation based on Surface Jacobian Check 
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/ObsErrorFactorSurfJacobian
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/ObsErrorFactorSurfJacobianRad
      channels: *amsua_n19_channels
      options:
        sensor: *Sensor_ID
        channels: *amsua_n19_channels
        obserr_demisf: [0.010, 0.020, 0.015, 0.020, 0.200]
        obserr_dtempf: [0.500, 2.000, 1.000, 2.000, 4.500]

- filter: Perform Action 
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  action:
    name: inflate error
    inflation variable:
      name: DerivedMetaData/ObsErrorFactorSurfJacobian
      channels: *amsua_n19_channels

# Step 9: Situation Dependent Check
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/ObsErrorFactorSituDepend
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/ObsErrorFactorSituDependMW 
      channels: *amsua_n19_channels
      options:
        sensor: *Sensor_ID
        channels: *amsua_n19_channels
        clwbkg_function:
          name: DerivedMetaData/CLWRetFromBkg
        clwobs_function:
          name: DerivedMetaData/CLWRetFromObs
        scatobs_function:
          name: DerivedMetaData/SIRetFromObs
        clwmatchidx_function:
          name: DerivedMetaData/CLWMatchIndex
          channels: *amsua_n19_channels
        obserr_function:
          name: DerivedMetaData/InitialObsError
          channels: *amsua_n19_channels
        obserr_clearsky: [2.500, 2.200, 2.000, 0.550, 0.300,
                          0.230, 0.230, 0.250, 0.250, 0.350,
                          0.400, 0.550, 0.800, 4.000, 3.500]

- filter: Perform Action
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels 
  action:
    name: inflate error
    inflation variable:
      name: DerivedMetaData/ObsErrorFactorSituDepend
      channels: *amsua_n19_channels

# Step 10: Gross Check 
# Remove data if abs(Obs-HofX) > absolute threhold 
- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/ObsErrorFactorLat
    type: float
    function:
      name: ObsFunction/ObsErrorFactorLatRad
      options:
        latitude_parameters: [25.0, 0.25, 0.04, 3.0]

- filter: Variable Assignment
  assignments:
  - name: DerivedMetaData/ObsErrorBound
    channels: *amsua_n19_channels
    type: float
    function:
      name: ObsFunction/ObsErrorBoundMW
      channels: *amsua_n19_channels
      options:
        sensor: *Sensor_ID
        channels: *amsua_n19_channels
        obserr_bound_latitude:
          name: DerivedMetaData/ObsErrorFactorLat
        obserr_bound_transmittop:
          name: DerivedMetaData/ObsErrorFactorTransmitTop
          channels: *amsua_n19_channels
          options:
            channels: *amsua_n19_channels
        obserr_bound_topo:
          name: DerivedMetaData/ObsErrorFactorTopo
          channels: *amsua_n19_channels
        obserr_function:
          name: DerivedMetaData/InitialObsError
          channels: *amsua_n19_channels
          threhold: 3
        obserr_bound_max: [4.5, 4.5, 4.5, 2.5, 2.0,
                           2.0, 2.0, 2.0, 2.0, 2.0,
                           2.5, 3.5, 4.5, 4.5, 4.5]

- filter: Background Check
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  function absolute threshold:
  - name: DerivedMetaData/ObsErrorBound
    channels: *amsua_n19_channels
  actions:
    - name: set
      flag: GrossCheck
      ignore: rejected observations
    - name: reject

# Step 11: Inter-Channel Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  test variables:
  - name: ObsFunction/InterChannelConsistencyCheck
    channels: *amsua_n19_channels
    options:
      channels: *amsua_n19_channels
      use passive_bc: true
      sensor: *Sensor_ID
      use_flag: [ 1,  1,  1,  1,  1,
                  1, -1, -1,  1,  1,
                  1,  1,  1,  1,  1 ]
  maxvalue: 1.0e-12
  actions:
    - name: set
      flag: InterChannelConsistency
      ignore: rejected observations
    - name: reject

# Step 12: Useflag Check
- filter: Bounds Check
  filter variables:
  - name: brightnessTemperature
    channels: *amsua_n19_channels
  test variables:
  - name: ObsFunction/ChannelUseflagCheckRad
    channels: *amsua_n19_channels
    options:
      sensor: amsua_n19
      channels: *amsua_n19_channels
      use_flag: [ 1,  1,  1,  1,  1,
                  1, -1, -1,  1,  1,
                  1,  1,  1,  1,  1 ]
  minvalue: 1.0e-12
  actions:
    - name: set
      flag: UseflagCheck
      ignore: rejected observations
    - name: reject
